{"version":3,"sources":["components/FeedbackOptions/feedbacks.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/statistics.styled.js","components/Statistics/Statistics.js","components/Section/section.styled.js","components/Section/Section.js","components/Notification/notification.styled.js","components/Notification/Notification.js","App.js","index.js"],"names":["Button","styled","button","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","Block","div","Item","span","Statistics","good","neutral","bad","total","positivePercentage","SectionLook","section","Section","title","children","String","h2","Notification","message","App","state","handleFeedback","value","target","textContent","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","buttons","Object","keys","this","LeaveFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAEaA,EAASC,IAAOC,OAAV,o7B,OCYJC,EAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACP,EAAD,CAAqBQ,QAASH,EAA9B,SACGE,GADUA,SCLNE,EAAQR,IAAOS,IAAV,yEAKLC,EAAOV,IAAOW,KAAV,0OCOFC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,eAACT,EAAD,WACE,eAACE,EAAD,oBAAaG,EAAb,OACA,eAACH,EAAD,uBAAgBI,EAAhB,OACA,eAACJ,EAAD,mBAAYK,EAAZ,OACA,eAACL,EAAD,qBAAcM,EAAd,OACA,eAACN,EAAD,iCAA0BO,EAA1B,YCRSC,EAAclB,IAAOmB,QAAV,kDCCT,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACJ,EAAD,WACGG,GAAS,6BAAKA,IACdC,KCLA,IAAMC,EAASvB,IAAOwB,GAAV,kDCEJ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,cAAC,EAAD,UAASA,I,ICuDHC,E,4MArDbC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,eAAiB,YAAiB,IAC1BC,EADyB,EAAbC,OACGC,YACrB,EAAKC,UAAS,SAAAC,GAAS,sBACpBJ,EAAQI,EAAUJ,GAAS,O,EAIhCK,mBAAqB,SAAAnB,GACnB,MAA+B,EAAKY,MACpC,OADA,EAAQf,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBqB,gCAAkC,WAChC,IAAQvB,EAAS,EAAKe,MAAdf,KACFG,EAAQ,EAAKmB,qBAEnB,MAAM,GAAN,OAAwBtB,EAAOG,EADd,M,4CAInB,WACE,IAAMqB,EAAUC,OAAOC,KAAKC,KAAKZ,OAC3BZ,EAAQwB,KAAKL,qBACbM,EAAgBD,KAAKX,eAC3B,OACE,qCACE,cAACT,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBlB,QAASkC,EAASjC,gBAAiBqC,MAE3C,IAAVzB,GACC,cAACS,EAAD,CAAcC,QAAQ,sBAEvBV,EAAQ,GACP,cAACI,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,EAAD,CACER,KAAM2B,KAAKZ,MAAMf,KACjBC,QAAS0B,KAAKZ,MAAMd,QACpBC,IAAKyB,KAAKZ,MAAMb,IAChBC,MAAOA,EACPC,mBAAoBuB,KAAKJ,6C,GA7CrBM,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6766d528.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  width: 60px;\r\n  height: 30px;\r\n  margin: 10px;\r\n\r\n  background: linear-gradient(\r\n    to bottom,\r\n    rgba(210, 255, 82, 1) 0%,\r\n    rgba(145, 232, 66, 1) 100%\r\n  );\r\n  color: #27355a;\r\n\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  outline: none;\r\n  border: none;\r\n\r\n  -webkit-box-shadow: 2px 3px 4 0px rgba(0, 0, 0, 0.75);\r\n  -moz-box-shadow: 2px 3px 4 0px rgba(0, 0, 0, 0.75);\r\n  box-shadow: 2px 3px 4px 0px rgba(0, 0, 0, 0.75);\r\n\r\n  cursor: pointer;\r\n  border: none;\r\n\r\n  &:active {\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(164, 179, 87, 1) 0%,\r\n      rgba(117, 137, 12, 1) 100%\r\n    );\r\n    color: #fff;\r\n\r\n    -webkit-box-shadow: 2px 3px 4 0px rgba(0, 0, 0, 0.75);\r\n    -moz-box-shadow: 2px 3px 4 0px rgba(0, 0, 0, 0.75);\r\n    box-shadow: 2px 3px 4px 0px rgba(0, 0, 0, 0.75);\r\n\r\n    transform: translateY(4px);\r\n  }\r\n`;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './feedbacks.styled';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div>\n    {options.map(option => (\n      <Button key={option} onClick={onLeaveFeedback}>\n        {option}\n      </Button>\n    ))}\n  </div>\n);\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const Block = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Item = styled.span`\r\n  margin-bottom: 5px;\r\n  margin-left: 20px;\r\n\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  letter-spacing: 0.03em;\r\n\r\n  color: #212121;\r\n`;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Block, Item } from './statistics.styled';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <Block>\n    <Item>Good: {good};</Item>\n    <Item>Neutral: {neutral};</Item>\n    <Item>Bad: {bad};</Item>\n    <Item>Total: {total};</Item>\n    <Item>Positive feedback: {positivePercentage}%;</Item>\n  </Block>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const SectionLook = styled.section`\r\n  margin-left: 10px;\r\n`;\r\n","import PropTypes from 'prop-types';\nimport { SectionLook } from './section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionLook>\n      {title && <h2>{title}</h2>}\n      {children}\n    </SectionLook>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const String = styled.h2`\r\n  margin-left: 30px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { String } from './notification.styled';\r\n\r\nexport default function Notification({ message }) {\r\n  return <String>{message}</String>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const value = target.textContent;\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback = total => {\n    const { good, neutral, bad } = this.state;\n    return (total = good + neutral + bad);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    var percentage = 100;\n    return `${percentage * (good / total)}`;\n  };\n\n  render() {\n    const buttons = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const LeaveFeedback = this.handleFeedback;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={buttons} onLeaveFeedback={LeaveFeedback} />\n        </Section>\n        {total === 0 && (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n        {total > 0 && (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}